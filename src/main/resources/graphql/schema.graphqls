type Query{
    #Book
    listaLibros:[Book]
    listarLibroById(id: Int):Book
    #Author
    listarAutores:[Author]
    listarAutorById(id:Int):Author

}
type Author{
    id: Int,
    name: String,
    lastName: String
}

type  Book{
    id: Int,
    title: String,
    yearPublic: Int,
    editorial:String
    code: String,
    estado:Boolean
    numePage: Int,
    author:Author
}


type Mutation{
    #Book
    createBook(bookPost: BookPost): Book,
    updateBook(id:Int, bookPut: BookPut):Book
    deleteBook(id:Int):Int,

    #Author
    createAuthor(authorGet:AuthorGet):Author,
    updateAuthor(id:Int, authorPut: AuthorPut):Author,
    deleteAutor(id:Int):Int
}



#Author
input AuthorPut{
    name: String,
    lastName: String
}

input AuthorGet{
    name: String,
    lastName: String
}


#Book
input  BookPut{
    #id: Int,
    title: String,
    yearPublic: Int,
    editorial:String
    code: String,
    estado:Boolean
    numePage: Int,
    #id_autor:Int
}

input  BookPost{
    title: String,
    yearPublic: Int,
    editorial:String
    code: String,
    estado:Boolean,
    numePage: Int,
    id_autor:Int
}




